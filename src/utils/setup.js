import {  Client } from '@textile/hub';

// Utils
import { getThread, fetchCollections} from "./db";
import { getIdentity, createIdentity, getUserAuth, newToken } from "./auth"

/*
 * Main Setup function
 * If newIdentity is true, it will set up with a brand new identity, instead of try to look for cached identity
 */
export const loginAndSetupDB = async ({newIdentity = false}) => {
    
    // Get PrivateKey
    const privateKey = newIdentity ? await createIdentity() : await getIdentity();

    // Instantiate Client with PrivateKey
    const client = await getClient(privateKey);

    // Get current DB (thread)
    const thread = await getThread()

    // Get All Collections
    const collections = await fetchCollections(client)

    return [client, privateKey, thread, collections];
}

/*
 * Gets the client using the UserAuth and registers a user with their privateKey
 * @param privateKey : PrivateKey type - the privateKey Identity of the user
 */
const getClient = async (privateKey) => {

    // Get UserAuth (A constant generated by the User Key genereated by hub)
    const userAuth = await getUserAuth();

    // Instantiate Client using User Auth
    const client = Client.withUserAuth(userAuth);

    // Register the user and get back a Token
    await newToken(client, privateKey);

    // Finally, return the client instance used to query the database
    return client;

}
